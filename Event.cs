//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PracticeActivityTraking
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class Event
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Event()
        {
            this.Activities = new HashSet<Activity>();
        }
        [Display(Name = "Номер мероприятия")]
        [Required(ErrorMessage = "Введите номер мероприятия")]
        [RegularExpression(@"(?i)\b[М]\d{5}$", ErrorMessage = "Неверный формат номера мероприятия (номер состоит из одной русской буквы М и последовательности из 5 цифр)")]
        public string EventID { get; set; }
        [Display(Name = "Название мероприятия")]
        [Required(ErrorMessage = "Введите Название мероприятия")]
        public string EventName { get; set; }
        [Display(Name = "Код формата мероприятия")]
        public int FormatID { get; set; }
        [Display(Name = "Код подтипа мероприятия")]
        public int SubtypeEventID { get; set; }
        [Display(Name = "Дата проведения")]
        [Required(ErrorMessage = "Введите дату проведения")]
        [DataType(DataType.Date)]
        public System.DateTime Date { get; set; }
        [Display(Name = "Код статуса мероприятия")]
        public int EventStatusID { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Activity> Activities { get; set; }
        public virtual CodifierFormatEvent CodifierFormatEvent { get; set; }
        public virtual CodifierStatusEvent CodifierStatusEvent { get; set; }
        public virtual CodifierSubtypeEvent CodifierSubtypeEvent { get; set; }
    }
}
